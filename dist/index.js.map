{"version":3,"sources":["../src/index.ts"],"sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\n\nexport function generateProject(name: string) {\n  const baseDir = path.join(process.cwd(), name);\n\n  const structure = [\n    \"src/domain/entities\",\n    \"src/domain/value_objects\",\n    \"src/domain/repositories\",\n    \"src/domain/events\",\n    \"src/application/dto\",\n    \"src/application/services\",\n    \"src/infrastructure/repositories\",\n    \"src/infrastructure/db\",\n    \"src/infrastructure/redis\",\n    \"src/infrastructure/messaging\",\n    \"src/infrastructure/config\",\n    \"src/interfaces/http\",\n    \"src/interfaces/graphql\",\n    \"src/interfaces/cli\",\n    \"src/shared/errors\",\n    \"src/shared/utils\",\n    \"src/shared/constants\"\n  ];\n\n  structure.forEach((dir) => {\n    fs.mkdirSync(path.join(baseDir, dir), { recursive: true });\n  });\n\n  const entryCandidates = [\n    \"src/main.ts\",\n    \"src/app.ts\",\n    \"src/index.ts\",\n    \"server.js\",\n    \"app.js\",\n    \"index.js\"\n  ];\n\n  let entryFile: string | null = null;\n\n  for (const candidate of entryCandidates) {\n    const candidatePath = path.join(baseDir, candidate);\n    if (fs.existsSync(candidatePath)) {\n      entryFile = candidatePath;\n      break;\n    }\n  }\n\n  if (!entryFile) {\n    entryFile = path.join(baseDir, \"src/main.ts\");\n    fs.writeFileSync(entryFile, \"// entry point\\n\");\n    console.log(`ℹ️ No entry file found. Created default at ${entryFile}`);\n  } else {\n    console.log(`ℹ️ Found existing entry file at ${entryFile}`);\n  }\n\n  console.log(`✅ Project ${name} generated successfully!`);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe;AACf,kBAAiB;AAEV,SAAS,gBAAgB,MAAc;AAC5C,QAAM,UAAU,YAAAA,QAAK,KAAK,QAAQ,IAAI,GAAG,IAAI;AAE7C,QAAM,YAAY;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,YAAU,QAAQ,CAAC,QAAQ;AACzB,cAAAC,QAAG,UAAU,YAAAD,QAAK,KAAK,SAAS,GAAG,GAAG,EAAE,WAAW,KAAK,CAAC;AAAA,EAC3D,CAAC;AAED,QAAM,kBAAkB;AAAA,IACtB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AAEA,MAAI,YAA2B;AAE/B,aAAW,aAAa,iBAAiB;AACvC,UAAM,gBAAgB,YAAAA,QAAK,KAAK,SAAS,SAAS;AAClD,QAAI,UAAAC,QAAG,WAAW,aAAa,GAAG;AAChC,kBAAY;AACZ;AAAA,IACF;AAAA,EACF;AAEA,MAAI,CAAC,WAAW;AACd,gBAAY,YAAAD,QAAK,KAAK,SAAS,aAAa;AAC5C,cAAAC,QAAG,cAAc,WAAW,kBAAkB;AAC9C,YAAQ,IAAI,wDAA8C,SAAS,EAAE;AAAA,EACvE,OAAO;AACL,YAAQ,IAAI,6CAAmC,SAAS,EAAE;AAAA,EAC5D;AAEA,UAAQ,IAAI,kBAAa,IAAI,0BAA0B;AACzD;","names":["path","fs"]}